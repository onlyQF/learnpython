列表.append('r')
列表.insert(位置，’内容‘）
del 列表（位置）删除后不可访问
列表.pop()弹出最后一个元素
列表.pop(位置）弹出指定位置的元素
列表.remove（指定元素名字）
列表.sort()进行按字母排序
列表.sort(reverse=true)反排序且永久改变顺序
sorted(列表）临时排序
列表.reverse()倒着打印列表
sorted（列表，reverse=true)倒着打印列表
value=list(range(1,6))数值列表

In [3]: min(value)
In [4]: max(value)
In [5]: sum(value)求值
squares = [value**2 for value in range(1,11)]列表解析，这里for后面没有：
列表[1:4],列表[:4],列表[2:] 列表[-3:]  列表2=列表1[:],列表切片
元组是不可修改的量
元组=（12，21）
总之，如果你只想执行一个代码块，就使用if-elif-else 结构；如果要运行多个代码块，就使用一系列独立的if 语句。
键值对，字典alien_0 = {'color': 'green', 'points': 5}
 添加键值对：alien_0['x_position'] = 0  alien_0['y_position'] = 25
 字典循环for key, value in user_0.items():
          print("\nKey: " + key)
          print("Value: " + value)
遍历字典内的所有键：for key in user.keys():
              print(key.title())
遍历字典内的所有值：for value in user.values():
for language in set(favorite_languages.values()):
print(language.title()) 方法set可以剔除重复的项
函数input() 让程序暂停运行，等待用户输入一些文本。获取用户输入后，Python将其存储在一个变量中，以方便你使用
函数input() 接受一个参数：即要向用户显示的提示 或说明，让用户知道该如何做
求模运算符 （%）是一个很有用的工具，它将两个数相除并返回余数：
要返回到循环开头，并根据条件测试结果决定是否继续执行循环，可使用continue 语句
要立即退出while 循环，不再运行循环中余下的代码，也不管条件测试的结果如何，可使用break 语句
def build_person(first_name, last_name, age=''): age定义为空字符，表示为可选参数
形参名*toppings 中的星号让Python创建一个名为toppings 的空元组，并将收到的所有值都封装到这个元组中。
